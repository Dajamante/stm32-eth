name: Build
on:
  pull_request:
  push:
    branches:
      - master
      - staging
      - trying

env:
  CARGO_TERM_COLOR: always

jobs:
  style:
    name: style
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  # Run cargo test
  test:
    name: test
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
        toolchain:
          - stable
        features:
          - stm32f745
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust ${{ matrix.toolchain }} with target (${{ matrix.target }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      - name: cargo test the documentation and readme
        uses: actions-rs/cargo@v1
        with:
          command: test
          # We use `--no-default-features` because compiling `defmt` for non-embedded targets
          # doesn't work.
          args: --target=${{ matrix.target }} --no-default-features --features ${{ matrix.features }}


  # Compilation
  build:
    name: build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
        toolchain:
          - stable
        features:
          - stm32f107
          - stm32f407
          - stm32f417
          - stm32f427
          - stm32f437
          - stm32f439
          - stm32f469
          - stm32f479
          - stm32f429
          - stm32f745
          - stm32f746
          - stm32f756
          - stm32f765
          - stm32f767
          - stm32f769
          - stm32f777
          - stm32f778
          - stm32f779
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust ${{ matrix.toolchain }} with target (${{ matrix.target }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --target=${{ matrix.target }} --features ${{ matrix.features }}

  # Examples
  examples:
    name: examples
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        example:
          - name: arp
            example: arp
            features: defmt
          - name: ip
            example: ip
            features: defmt,smoltcp-phy,smoltcp/defmt,smoltcp/socket-tcp
          - name: pktgen
            example: pktgen
            features: defmt
          - name: rtic-echo
            example: rtic-echo
            features: rtic-echo-example
          - name: rtic-echo with nucleo pins
            example: rtic-echo
            features: rtic-echo-example,example-nucleo-pins
        mcu:
          - stm32f107
          - stm32f429
          - stm32f745
        toolchain:
          - stable
        target:
          - thumbv7m-none-eabi
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust ${{ matrix.toolchain }} with target (${{ matrix.target }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      - name: Build example ${{ matrix.example.name }} for ${{ matrix.mcu }}
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --release --target=${{ matrix.target }} --example ${{ matrix.example.example}} --features ${{ matrix.mcu }},${{ matrix.example.features }}

  # Refs: https://github.com/rust-lang/crater/blob/9ab6f9697c901c4a44025cf0a39b73ad5b37d198/.github/workflows/bors.yml#L125-L149
  #
  # ALL THE PREVIOUS JOBS NEEDS TO BE ADDED TO THE `needs` SECTION OF THIS JOB!

  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    needs:
      - style
      - build
      - test
      - examples
    runs-on: ubuntu-20.04
    steps:
      - name: Mark the job as a success
        run: exit 0
